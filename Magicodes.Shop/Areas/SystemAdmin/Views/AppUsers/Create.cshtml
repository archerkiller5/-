@model Magicodes.Shop.Areas.SystemAdmin.Models.RegisterViewModel

@{
    ViewBag.Title = "新建";
    ViewBag.ShowPageHeader = false;
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-9">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="/">主页</a>
            </li>
            <li>
                <a href="@Url.Action("Index")">上级页面</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <hr style="margin: 2px 2px 10px 2px;"/>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, new {@class = "control-label col-sm-2"})
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                                    @*<span class="help-block m-b-none">辅助性描述文字。</span>*@
                                    @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, new {@class = "control-label col-sm-2"})
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control", onkeyup = "checkContactNumber();"}})
                                    @*<span class="help-block m-b-none">辅助性描述文字。</span>*@
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, new {@class = "control-label col-sm-2"})
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
                                    @*<span class="help-block m-b-none">辅助性描述文字。</span>*@
                                    @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TenantId, new {@class = "control-label col-sm-2"})
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.TenantId, ViewBag.TenantId as SelectList, new {@class = "form-control"})
                                    @*<span class="help-block m-b-none">辅助性描述文字。</span>*@
                                    @Html.ValidationMessageFor(model => model.TenantId, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, new {@class = "control-label col-sm-2"})
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                                    @*<span class="help-block m-b-none">辅助性描述文字。</span>*@
                                    @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, new {@class = "control-label col-sm-2"})
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                                    @*<span class="help-block m-b-none">辅助性描述文字。</span>*@
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-10">
                                    <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i>&nbsp;提交</button>
                                    <a href="@Url.Action("Index")" class="btn btn-primary"><i class="fa fa-mail-reply"></i>&nbsp;返回</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/iCheck")
    <script type="text/javascript">
        $(function() {
            $('.i-checks')
                .iCheck({
                    checkboxClass: 'icheckbox_square-green',
                    radioClass: 'iradio_square-green',
                });
        });

        function checkContactNumber() {
            $("#error").css("display", "none");
            var mobile = $.trim($("#PhoneNumber").val());
            var isMobile = /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1})|(17[0-9]{1})|(14[0-9]{1}))+\d{8})$/;
            var isPhone = /^(?:(?:0\d{2,3})-)?(?:\d{7,8})(-(?:\d{3,}))?$/;;
            var error =
                "<label id=\"error\" class=\"validate_input_error\" style=\"color:red;\">请正确填写电话号码，例如:13511111111或010-11111111</label>";
            //如果为1开头则验证手机号码
            if (mobile.substring(0, 1) == 1) {
                if (!isMobile.exec(mobile) && mobile.length != 11) {
                    $("#PhoneNumber").after(error);
                    $("#PhoneNumber").focus();
                    return false;
                }
            }
            //如果为0开头则验证固定电话号码
            else if (mobile.substring(0, 1) == 0) {
                if (!isPhone.test(mobile)) {
                    $("#PhoneNumber").after(error);
                    $("#PhoneNumber").focus();
                    return false;
                }
            }
            //否则全部不通过
            else {
                $("#PhoneNumber").after(error);
                $("#PhoneNumber").focus();
                return false;
            }
            return true;
        }

    </script>
}